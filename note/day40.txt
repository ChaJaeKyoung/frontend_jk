cd: change directory
cd친 후 한칸 띄고 경로쓰기 
예) cd 11_react 
tab을 누르면 자동으로 경로 목록이 뜸

CRA : create react app 이용해서 react프로젝트 만듦
npx create-react-app 프로젝트명
예) npx create-react-app my-app


Ok to proceed? (y) 질문이 나오면 
y친 후 엔터!

혹시 터미널창에서 yes 하지 않고 싶으면 ?
(터미널창에서 실행취소 하고싶으면?)
Ctrl+c 
누르면 실행 취소가 된다!


------생성이후-------
cd 프로젝트명  <엔터>
npm start <엔터>
--------------------
인터넷창에 리액트가 뜬다면 성공



========================
node나 react 관련 설치 후 
src 쪽에
package.json 을 가장 먼저 열어본다!
패키지정보를 관리 
dependencies 쪽에 나와있음
예)
"react": "^18.2.0",
"react-dom": "^18.2.0",
"react-scripts": "5.0.1",
"web-vitals": "^2.1.4"

--------------------------
커스텀명령어 가능
스크립트 아래에 추가하면 됨
예) npm start가 여기서 나옴
"scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },

============================
src\package-lock.json
버전에 관한 락
다른사람이 수정해도 
이 lock에 적혀있는 대로 pull받아진다

혹시 최신버전으로 업데이트가 필요하면
이 lock 파일에 최신버전으로 수정하고 올려야
다른사람이 pull할때 최신버전으로 받아지게 된다!

=======================
.gitignore에
#dependencies
/node_modules

이건 라이브러리 목록이라 이그노어 대상이다.-> node_modules 폴더는 업로드 안됨


*따라서 npm install 을 가장 먼저 해줘야 된다.
(어떤 리액트 프로젝트를 처음 받았을 때 딱 한번, 
혹시 개발하다가 라이브러리 추가되면 그 때만 npm install 하면 됨)
알아서 package.json에
dependencies 목록에 있는걸 전부 설치
===========================


public\index.html

<div id="root">여기가 렌더링 자리</div>


====================

src\index.js
div#root 사이에 App.js에서 만든걸 렌더링 해주는 역할

==================

src\App.js
여기가 실제 코드 작성하는 작업공간

===================

리액트는 기본 localhost 포트번호가 3000이다

localhost:3000
을 주소창에 치면 우리가 코딩한 결과가 뜬다!
index.html이런곳에서 live로 띄우는것이 아님


===================

컴포넌트 이름은 대문자로 시작한다.!!
예) MyButton.js
예) JsxUse.jsx

jsx로 쓴걸 바벨이라고 하는 프로그램이 js로 번역시켜준다


JsxUse.jsx  에서 컴포넌트를 만들었을 때

JSX내에서는 주석을
{/**/} 이렇게 사용한다.

export 이름은 함수컴포넌트와 일치시켜야 하고




===================
import 에서 받아오는 변수명을 export와 일치시켜야 헷갈리지 않는다


index.js에
생성자함수(JsxUse)를 자동완성하는걸로 입력을 해 주면
자동으로 import 해준다.
import JsxUse from './chapter3/3.4/JsxUse';


만약에 경로에서 JsxUse.jsx 파일 명이 바뀌면
동기적으로 JsxUse경로명도 같이 바뀌어준다.

===================

논외) js와 jsx 확장자는 차이가 없지만
자동완성기능에서 차이가 있다. 
js에서는 div만쳐도 뒤에 닫는 태그가 안된다
(<꺽쇠하고 안에 엘리먼트명을 쳐주면 닫는태그가 자동으로 생긴다)
jsx에서는 html처럼 div 자동완성 기능이 있다.
리액트에서만 jsx사용하기 때문에 jsx를 써야한다.

결론: 회사 내규를 따르자!


===============

논외2) 리액트는 라이브러리 인가 프레임워크 인가??
결론부터 말하자면 라이브러리 이다..
하지만 너무 양이 방대하고 문법이 있기 때문에 (JSX)
프레임워크처럼 행동하여 사람들에게 혼란을 야기시킴..
그러나 JS에서 필요할때마다 리액트를 중간에 섞어 쓰므로...
라이브러리가 맞다!

===============

Q.JSX사용은 리액트에서만 할까?

A. 아님 다른곳에서도 쓴다. 예)Vue.js에서도 사용한다

======================
Q. index.html은 아예 안건들일까?
A. 리액트 사용시 <!-- lang, favicon, font, title정도만 바꿔준다 -->


=====================

다른 컴퓨터에서 react 프로젝트를 실행할 때

1. node를 먼저 설치해 준다.
2. package.json 파일이 있는 폴더로 진입한다.
3. npm install을 해준다.
4. npm start를 한다.

결과: localhost:3000 접속 되었고, note폴더에 새로운 package-lock.json 파일이 생성되었다 (최상위폴더쪽에도 package-lock.json파일이 생성되었다.)
처리: 새로 생성된 package-lock.json파일을 두개 다 지웠다.
회은님솔루션: my-app 폴더 에서 npm install하니 package-lock파일은 생성되지 않았다.







