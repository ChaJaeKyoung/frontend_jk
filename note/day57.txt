
slice에서
1. action 생성 리듀서 함수 만들고
2. export 하기
3. 사용할 곳에서 액션함수 import하기
4. *store에 dispatch로 요청보내기
 -> dispatch(액션함수()) 넣어주기
액션함수에 인자값으로 넘겨줄 데이터값 넣기
예)dispatch(getMoreProducts(response.data));


=================
코드 포멧 커스텀 설정 할 수 있는
어떤것은 ''로 어떤것은 ""로 ..!!
보기 안좋다. 찾아보기!!
prettier ,
esLint ,
vscode 자체 설정..


=================

0.const cartSlice = createSlice();

-만드는법!
const cartSlice = createSlice({
  name: 'cart',
  initialState,
  reducers: {

  }
});


2. initialState 기본값을 넣어준다.
const initialState = {
  cartList: [
    {
      id: "1",
      title: "Arcsaber 11 Pro",
      price: 299000,
      count: 2
    },
    {
      id: "3",
      title: "Aerus Z",
      price: 199000,
      count: 1
    },
  ],
};

3.리듀서 함수 export
export default cartSlice.reducer;

4.장바구니 리스트 state 호출 함수 export
export const selectCartList = state => state.cart.cartList;

5.store.js에 reducer함수 추가
import cartReducer from "../features/cart/cartSlice";

export const store = configureStore({
  reducer: {
    product: productReducer,
    cart: cartReducer, 
  }
});

6. Cart.js에 store에 저장된 cartList 꺼내쓰기
 1) useSelector() 선언하기
 useSelector(state => state.cart.cartList);
state => state.cart.cartList이부분을 아얘 cartSlice에 넣어줘서 export 해준다음
이 상태가필요한 곳마다 간단하게 import 한 그 이름으로 사용한다.

2) map함수로 cartList 배열에서 꺼내오기
{cartList.map((cart,index)=> {
            return (
              <tr key={cart.id} className='odd-color'>
                <td>{ index + 1 }</td>
                <td>{ cart.title }</td>
                <td>{ cart.count }</td>
                <td>{ cart.price * cart.count }원</td>
              </tr>
            );
          })}

맵함수 중요!!!! key값을 꼭 써줘야 한다.


7. 수량 부분에 -, + 버튼 추가해서 수량 조절하기
1)리듀서 만들기
cartSlice로 가서 수량 변경 reducer 함수 만든다.
const cartSlice = createSlice({
  name: 'cart',
  initialState,
  reducers: {
    // 장바구니 수량을 변경하는 리듀서 함수 만들기
    // Quiz. 상품의 id값을 받아서 해당 상품의 수량을 1씩 증가 / 감소
   increaseCount: (state, action) => { // action { type: '', payload: }
      
      const targetItem = state.cartList.find((cart) => { return cart.id === action.payload });
      targetItem.count ++ ;
    },
    decreaseCount: (state, payload) => {
      
    },
  }
});

2)액션 생성 함수 export
export const { increaseCount, decreaseCount } = cartSlice.actions;
3)버튼 클릭시 액션 객체를 dispatch()
const dispatch = useDispatch();
4)요청 보낼 때 id값을 payload에 담아 보내기
<button type="button" onClick={() => {dispatch(increaseCount(cart.id))}}> + </button>


====================

상세페이지에서 
수량만큼 장바구니에 넣기 QUIZ
