Hook 

react state와 라이프사이클을 갈고리로 엮어줌

*UseEffect 
의존성 배열을 넣지 않을 경우엔: infinite로 계속 실행됨
의존성 배열에 빈배열을 넣을 경우: 렌더링될 때 처음에만 한번만 실행됨

*useMemo
너무 많이 쓸 경우 메모리할당이 높아져 성능 저하의 원인이 됨.
꼭 필요할 때만 사용

이전에 계산된 값들을 저장시켜둔다.

유용하게 사용할 곳 예1.
지도에서 어떤 장소를 불러와서 저장해두면
맵을 움직일 때마다 버벅거리는 현상을 줄어들게 성능향상을 시킬 수 있다.


*UseCallback
렌더링 할 때마다 함수를 재정의하지 않도록 쓰는 함수
쌤은 props로 함수를 넘길때 사용하셨다.


*useRef 
부득이하게 DOM 을 선택해야 하는 경우에만 사용
JS에서 getElementById(), querySelector() 같은역할

컴포넌트 안에 변수를 만들 때 사용
렌더링 될 때 값이 초기화 되지 않음!
일반 변수로 선언시 렌더링 될 때마다 값이 초기화 됨

화면에 보여지지 않을 로직에 사용된 숫자같은 것들은 
전부 ref에 넣어두면 된다. 
의미없는 것들을 자꾸 렌더링 할 필요 없기 때문이다.