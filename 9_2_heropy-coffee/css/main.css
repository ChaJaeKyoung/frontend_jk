/* 스크롤 행동css */
/* html {
  scroll-behavior: smooth;
} */

/* COMMON */
html {
  /* rem 단위를 위한 최상위 테그에 font-size를 줌 */
  /* a tag 자체에 여백이 있기 때문에
a요소를 감싸는 부모에게 font-size를 0을 주고
a 자식에게 직접 font-size를 줘야하고
body 전체에 font-size를 10px을 줘서
나중에 유지보수에 용이하도록
직접 준 a테그의 사이즈는 rem 배율을 적용하도록 한다
rem단위는  무조건 최상위 에다가 적용해야 됨
1.6rem => 16px로 나타남!!!! -회은님이 알려줌 */
  font-size: 10px;  
}
body {
  /* 기본(공통) 스타일 : 글자 크기 색 등.. */
  font-family: 'Nanum Gothic', sans-serif;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.4;
  color: #333;
  /* 위 속성들은 모두 상속되기에 전체 스타일을 한번에 제어 */
  /* w3school -> inherit 가 yes면 상속이 가능한 속성 no면 상속이 안되는 속성이다. */  
}
a {
  /* 밑줄 제거 */
  text-decoration: none;  
}
.inner {
  /* 가운데 정렬 */
  width: 1100px;
  /* min-width: 1100px;
  max-width: 1100px; */
  margin: 0 auto ;
  position: relative;
}
img {
  /* img는 inline요소이기 때문에(그러나 실제로는 inline-block 처럼 행동한다) 
    글자취급을 하여서 baseline이라는 개념이 생긴다*/
  /* 이미지가 인라인 요소라서 발생하는 문자 기준선(Baseline) 아래의 공간을 제거하기 위해 dispaly: block을 해준다 */
  display: block;
}
/* 전역 버튼 스타일 */
/* 버튼과 같이 여러 곳에서 반복 사용되는 요소를 공통 스타일로 작업하면 매번 다시 작성 할 필요가 없음 */
.btn {
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  box-sizing: border-box;
  font-size: 16px;
  font-weight: 700;
  color: #333;
  text-align: center;
  cursor: pointer;

  

  /* a, span 같은 인라인 요소를 버튼으로 사용할 수도 있으니 블록으로 지정 */
  display: block;

  /* 앞에 적용 대상을 안 적으면 기본값이 all  */
  /* 전환 효과는 요소에 직접 적용해야 hover 했을 때와 안 했을 때 둘 다 적용 */
  transition: .4s;
}
.btn:hover {
  background-color: #333;
  color: #fff;
}
.btn.btn--brown {
  color: #592b18;
  border-color: #592b18;
  /* 커스텀 커서 */
  /* 마지막에 auto값을 넣어줘야 한다. */
  /* 이미지 해상도는 logo정도의 작은 크기만 허용 */
  cursor: url("https://blog.kakaocdn.net/dn/BQXpN/btq3qNR67Lg/8tx8tGzkOcr5BuX5dyIaKk/img.png") 58 58, auto;
}
.btn.btn--brown:hover {
  background-color: #592b18;
  color: #fff;
}
/* 이후 공통 btn요소들-복붙- */
.btn.btn--reverse {
  background-color: #333;
  color: #FFF;
}
.btn.btn--reverse:hover {
  background-color: transparent;
  color: #333;
}
.btn.btn--gold {
  color: #D9AA8A;
  border-color: #D9AA8A;
}
.btn.btn--gold:hover {
  color: #FFF;
  background-color: #D9AA8A;
}
.btn.btn--white {
  color: #FFF;
  border-color: #FFF;
}
.btn.btn--white:hover {
  color: #333;
  background-color: #FFF;
}

/* BACK TO POSITION */
.back-to-position {
  opacity: 0;
  transition-duration: 1s;
}
.back-to-position.to-left {
  transform: translateX(150px);
}
.back-to-position.to-right {
  transform: translateX(-150px);
}
.show .back-to-position {
  opacity: 1;
  transform: translateX(0);
}
.show .back-to-position.delay-1 {
  transition-delay: .3s;
}
.show .back-to-position.delay-2 {
  transition-delay: .6s;
}
.show .back-to-position.delay-3 {
  transition-delay: .9s;
}

/* HEADER */
header {
  background-color: #f6f5f0;  
   /* 고정된 헤더 */   
  width: 100%;
  position: fixed;
  top: 0;
  z-index: 9;
  border-bottom: 1px solid #c8c8c8;
}
header > .inner {
  height: 120px; 
}
header .logo {
  /* 로고의 수직 가운데 정렬 */
  /* top과 bottom 다 0을 줘서 상충되게 한다음 마진을 오토로 주면 가운데 떠 있다. */
  height: 75px;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}
header .sub-menu {
  /* 서브 메뉴 배치 */
  position: absolute;
  top: 10px;
  right: 0;

  /* 자식 요소(메뉴와 검색)를 수평 정렬 */
  display: flex;
}
header .sub-menu ul.menu {
  /* 메뉴 아이템 스타일 */
  font-family: Arial, sans-serif;
  display: flex; /* 메뉴 아이템(li)을 수평 정렬 */
  
}
header .sub-menu ul.menu li {
  /* 부모엔 항상 relative를 줘야한다. */
  position: relative;
}
header .sub-menu ul.menu li::before {
  /* 가상요소 before과 after안에는 꼭 content를 넣어줘야 한다. */
  content: "";
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  /* 로고처럼 수직 가운데 정렬 */
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto; 
}
header .sub-menu ul.menu li:first-child::before {
    /* 첫번째 요소의 구분선 숨기기 */
    display: none;
}
header .sub-menu ul.menu li a {
  /* 메뉴 아이템 간격 */
  padding: 11px 16px; /* 페딩을 주는 이유: 요소의 상하좌우에 누를 수 있는 영역을 확대 */
  display: block; /* 위-아래 여백 적용을 위해 인라인요소인 a를 블록요소로 변경 */
  font-size: 13px;
  color: #656565;
}
header .sub-menu ul.menu li a:hover {
  /* 메뉴 아이템 간격 */
  color: #000;
}
header .sub-menu .search {
  position: relative;
  height: 34px;
}
header .sub-menu .search input {
  /* 검색창 스타일 */
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  box-sizing: border-box; /* 박스 사이즈의 기준을 보더까지 잡음 */
  outline: none; /* 보더 바깥쪽 테두리인데 잘 안씀 (보더를 씀) */
  background-color: #fff;
  color: #777;
  font-size: 12px;
  transition: width .4s; /* 가로 너비에 변화가 생기면 자연스럽게 전환 처리 */
}
header .sub-menu .search input:focus {
  /* input에 포커스 됐을 때 변화 */
  width: 190px;
  border-color: #ea9926;
}
header .sub-menu .search .material-icons {
  /* 검색 아이콘 스타일 */
  height: 24px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  margin: auto;
}
header .sub-menu .search.focused .material-icons {
  /* focused 일 때 아이콘의 상태 변경 */
  /* 검색창 포커스 시 검색 아이콘 투명화 */
  /* opacity:0 ; */
  display: none;
}

/* 메인 메뉴 */
header .main-menu {
  /* 메인 메뉴 배치 */
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1; /* 드롭다운 될 요소가 더 위에 보이게 하려고 */
  display: flex;  
}
header .main-menu .item .item__name {
  /* 메뉴 아이템 간격 */
  padding: 10px 20px 34px;
  font-family: Arial, sans-serif;
  font-size: 13px;
  display: block;  
}
header .main-menu .item:hover .item__name {
  /* 메뉴 호버 시 스타일 */
  background-color: #2c2a29;
  color: #ea9926;
  border-radius: 6px 6px 0 0; /*border-radius는 좌상단부터 시계방향으로 적용이 됨*/
}

/* 드롭다운 메뉴 스타일 */
header .main-menu .item .item__contents {
  
  width: 100%;
  position: fixed; /* 뷰포트 */
  left:0;
  /* color: #fff */
  /* display: none; */
  /* 메뉴가 스무스하게 내려오게 하는 효과 */
  overflow:hidden;
  height:0;
  transition: height 1s;
}
header .main-menu .item:hover .item__contents {
  /* display: block; */
  height: 500px;
}
header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
}
header .main-menu .item .item__contents .contents__menu > ul {
  padding: 20px 0;
  display: flex;
}
header .main-menu .item .item__contents .contents__menu > ul > li {
  /* 상세 메뉴 가로 너비 */
  width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul > li h4 {
  padding: 3px 0 12px;
  font-size: 14px;
  color: #fff;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li {
  padding: 5px 0;
  font-size: 0px;
  
  cursor: pointer;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li a {
  color: #999;
  font-size: 1.2rem;
}
/* header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #ea9926;
} */
/* header .main-menu .item .item__contents .contents__menu > ul > li ul li a {
  padding: 5px 0;
  font-size: 12px;
  
  cursor: pointer;
} */
header .main-menu .item .item__contents .contents__menu > ul > li ul li a:hover  {
  color: #ea9926;
}
header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  background-image: url(../images/main_menu_pattern.jpg);
}
header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 900;
}
header .main-menu .item .item__contents .contents__texture p {
  color: #ea9926;
  margin: 4px 0 14px;
}
/* 전역 배지(고정 배너) 스타일 */
header .badges {
  /* 방법1. */
  /* position: fixed;
  top: 132px;
  right: 12px;
  z-index: 9; */

  /* 방법2. */
  /* header에 position relative를 주고
    .badges에  position absolute를 주기만해도
    z-index 처리를 하지 않더라도
    뱃지가 헤더의 자식이므로 헤더의 메뉴 위에 올라옴
    자식이 부모를 덮는다! 
  */
  position: absolute; 
  top: 132px;
  right: 12px;
}
header .badges .badge {
  border-radius: 10px;
  margin-bottom: 12px;

  /* box-shadow 그림자 주는 css */
  /* box-shadow: x축거리 y축거리 흐림(blur) 범위, 확대·축소(spread) 범위 색상 */
  /* 흐림범위는 숫자가 높아질수록 흐려진다 */
  box-shadow: 4px 4px 10px 0 rgba(0,0,0, .15);
  cursor: pointer;
  overflow: hidden;
}

header .badges .badge img {
  /* 이미지는 인라인블록 같은 요소이므로,, div안에 있는 img의 바닥 부분이 하얗게 뜨게 되는 상황이 발생함!!! */
  /* 보통 이미지를 글자로 보지 않기 때문에 공통스타일로 img {display : block} 처리를 해 준다 */

  /* 
    이미지가 인라인 요소라서 발생하는 문자기준선(baseline) 아래의 공간을 제거하기 위해
    img를 레이아웃 요소로 쓰기 위해
    ->a나, img같은 레이아웃으로 쓰는 인라인 요소들을 블록으로 바꿔놓고 시작하는 개발자도 있다.
  */
  display: block;  
}

/* VISUAL */
.visual {
  
  background-image: url("../images/visual_bg.jpg");
  background-position: center;
  background-repeat: no-repeat;
  /* 헤더가 fixed 되어 일반 배치 흐름에서 벗어남 (주변 요소들과 상호작용하지 않음) */
  /* 헤더의 높이만큼 외부 여백 추가 */
  margin-top: 120px;
}
.visual .inner {  
  height: 646px;  
}
.visual .title {
  position: absolute;
  top: 40px;
  left: -10px;
}
.visual .title .btn {
  position: absolute;
  top: 230px;
  left: 148px;
}
.visual .cup1.image {
  position: absolute;
  bottom: 0;
  right: -47px;
}
.visual .cup1.text {
  position: absolute;
  top: 40px;
  right: 60px;
}
.visual .cup2.image {
  position: absolute;
  bottom: 0;
  right: 162px;
}
.visual .cup2.text {
  position: absolute;
  top: 186px;
  right: 412px;
}
.visual .spoon {
  position: absolute;
  bottom: 0;
  left: 275px;
}
/* 순차적으로 요소 보이기 */
.visual .fade-in {
  /* 투명한 상태로 시작 */
  opacity: 0;
}

/* NOTICE */
.notice {
  position: relative;
}
.notice .bg-left {
  width: 50%;
  height: 100%;
  background-color: #333;
  position: absolute;
  top: 0;
  left: 0;
}
.notice .bg-right {
  width: 50%;
  height: 100%;
  background-color: #f6f5ef;
  position: absolute;
  top: 0;
  right: 0;
}
.notice .inner {
  height: 62px;
  display: flex;
}
.notice .inner__left {
  /* width: 70%; */
  flex: 7;
  background-color: #333;
  /* 타이틀과 슬라이드를 정렬하기 위한 flex */
  display:flex;
  align-items: center;
}
.notice .inner__left h2 {
  color: #fff;
  font-size: 17px;
  font-weight: 700;
  margin-right: 20px;
}
.notice .inner__left .swiper {
  height: 62px;
  /* 개별 아이템 요소 하나만 꽉차게 하는 방법 */
  flex-grow: 1;  
}
.notice .inner__left .swiper .swiper-slide {
  height: 62px;
  display: flex;
  align-items: center;
}
.notice .inner__left .swiper .swiper-slide a {
  color: #fff;
}
.notice .inner__left .notice-more {
  width: 62px;
  height: 62px;
  display: flex;
  justify-content: center;
  align-items: center;  
}
.notice .inner__left .notice-more .material-icons {
  /* 머티리얼 아이콘은 글자로 취급되기 때문에, 글자 관련 속성이 적용 됨 */
  color: #fff;
  font-size: 30px;
}
.notice .inner__right {
  /* width: 30%; */
  flex: 3;

  display: flex;
  justify-content: flex-end;
  align-items: center;
}
.notice .inner__right h2 {
  font-size: 17px;
  font-weight: 700;
}
.notice .inner__right .toggle-promotion {
  width: 62px;
  height: 62px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;  
}
.notice .inner__right .toggle-promotion .material-icons {
  font-size: 30px;
}


/* PROMOTION */
.promotion {
  display: flex;
  justify-content: center;
  background-color: #f6f5ef;
  overflow: hidden;

  position: relative;
  height: 663px;
  transition: height .4s;
}
.promotion.hide {
  height: 0;
}

.promotion .swiper {
  /* 이미지 크기(819px) 슬라이드 3개 && 사이사이 여백 10px 2개 = 2477px */
  width: calc(819px * 3 + 10px * 2) ;
  height: 553px;

  /* 2477px 유지를 위해 감소 너비 비율을 0으로 (inner 바깥으로 넘치게 하기 위해) */
  flex-shrink: 0;
}
.promotion .swiper-slide {
  /* 모든 슬라이드를 반투명하게, active 한 것만 불투명하게 */
  position: relative;
  opacity: 0.5;
  transition: opacity 1s;
}
.promotion .swiper-slide-active {
  /* 모든 슬라이드를 반투명하게, active 한 것만 불투명하게 */
  opacity: 1;
}
.promotion .swiper-slide .btn {
  position: absolute;
  bottom:0;
  /* absolute를 이용한 가운데 정렬 */
  left: 0;
  right: 0;
  margin: 0 auto;  
}
.promotion div.swiper-pagination {
  /* 우선순위가 같을 때 link css 위치를 js보다 내려서 더 나중에 적용시켜서 스타일을 먹게 하던지 우선순위를 높이면 해결됨!!  */
  bottom: 40px; /*<- !important 쓰는거 이건 최대한 지양해야 됨*/
  /* 헤더의 z-index가 9이기 때문에 1로 엎어씌움
    또다른 해결방법은 
    애초에 해더의 z-index 값을 swiper의 기본값인 z-index 10보다 더높게 주면됨
  */
  z-index: 1; 
}
.promotion .swiper-pagination .swiper-pagination-bullet {
  /* 기존 색상은 투명하게 숨기고, 배경이미지로 커스터마이즈 하여 사용 */
  background-color: transparent; /*transparent 투명값*/
  background-image: url(../images/promotion_slide_pager.png);
  width: 13px;
  height: 12px;
  margin-right: 6px;
}
.promotion div.swiper-pagination .swiper-pagination-bullet-active {
  /* active된 페이지네이션만 이미지 적용 */  
  background-image: url(../images/promotion_slide_pager_on.png); 
}

/* 쉼표로 구분해서 다중 선택으로 공통 스타일 지정 */
.promotion .swiper-button-prev, 
.promotion .swiper-button-next {
  width: 42px;
  height: 42px;
  border: 2px solid #333;
  border-radius: 50%; /*원 만들기*/
  top: 300px;
  z-index:1;
  color:#333;  
  transition: background-color .2s, color .2s, scale .2s;
}
.promotion .swiper-button-prev {
  /* 가운데로 몰아놓고 마진으로 위치 조정 */
  left: 50%;
  margin-left: -480px;
}
.promotion .swiper-button-next {
  right: 50%;
  margin-right: -480px;
} 
.promotion .swiper-button-prev:hover, 
.promotion .swiper-button-next:hover {
  background-color: #333;
  color: #fff;
  scale: 1.2;
}
  .promotion .swiper-button-prev::after,
  .promotion .swiper-button-next::after {
  display: none;
} 

/* REWARDS */
.rewards {
  position: relative;
}
.rewards .bg-left {
  width: 50%;
  height: 100%;  
  background-color: #272727;
  position: absolute;
  top: 0;
  left: 0;
}
.rewards .bg-right {
  width: 50%;
  height: 100%;
  background-color: #d5c798;
  position: absolute;
  top: 0;
  right: 0;
}
.rewards .inner {
  height: 241px;
  background-image: url("../images/rewards.jpg");
  /* background-repeat: no-repeat; */
}
.rewards .btn-group {
  position: absolute;
  right: 0;
  bottom: 24px;
  width: 250px;
  display: flex;
  flex-wrap: wrap;
}
.rewards .btn-group .btn.sign-up {
  margin-right: 10px;
}
.rewards .btn-group .btn.sign-in {
  width: 110px;
}
.rewards .btn-group .btn.gift {
  margin-top: 10px;
  flex-grow: 1;
}

/* YOUTUBE */
.youtube {
  position: relative;
  height: 700px;
  background-color: #333;

  /* 영상 출력 넘치는 부분 숨기기 : 영상이 좀 더 큰데 위아래를 조금 자름*/
  overflow: hidden;
}

.youtube .youtube__area {
  --width: 1920px;
  --height: 1080px;

  position: absolute;
  /* 유튜브 섹션 가운데 기준으로 배치 */
  left: 50%;
  top: 50%;
  /* 유튜브의 표준 영상 비율 16:9 */
  width:  var(--width);
  height: var(--height);

  /* margin을 이용하여 정가운데로 옮긴다 */
  margin-left: calc(var(--width)/-2 );
  margin-top: calc(var(--height)/ -2 );

  /* 중복된 스타일 변수로 선언 */
  /* 
    너비, 높이를 수정할 경우 총 4곳 수정 필요
    => CSS '변수' 선언으로 재사용 
    2개의 대시(--)기호로 시작하고 원하는 변수명 지정 : css값
    선언 된 변수는 CSS var() 함수를 통해 사용
  */
}
#player {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}
.youtube .youtube__cover {
  /* 섹션 영역 전체를 덮어버림 */
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0, .3);
  background-image: url(../images/video_cover_pattern.png);
}

.youtube .inner {  
  height: 100%; 
}
.youtube .floating1 {
  position: absolute;
  top: 0;
  left: 0;
}
.youtube .floating2 {
  position: absolute;
  top: 120px;
  left: 120px;
}


/* SEASON PRODUCT */
.season-product {
  background-image: url("../images/season_product_bg.jpg");
}
.season-product .inner {
  height: 400px;
}
.season-product .floating3 {
  /* overflow 때문에 다음 섹션에 이동 */
  position: absolute;
  top: -180px;
  right: 0px;
}

.season-product .text-group {
  position: absolute;
  top: 110px;
  right: 100px;
}
.season-product .text-group .title {
  margin-bottom: 10px;
}
.season-product .text-group .description {
  margin-bottom: 15px;
}

/* RESERVE COFFEE */
.reserve-coffee {
  background-image: url(../images/reserve_bg.jpg);
}
.reserve-coffee .inner {
  height: 400px;
}
.reserve-coffee .reserve-logo {
  position: absolute;
  top: 110px;
  left: 0;
}
.reserve-coffee .text-group {
  position: absolute;
  top: 124px;
  left: 208px;
}
.reserve-coffee .product {
  position: absolute;
  top: 0;
  right: 0;
}

.pick-your-favorite {
  background-image: url(../images/favorite_bg.jpg);

  /* 시차(Parallax) 효과 */
  background-attachment: fixed; /* 배경 이미지가 뷰포트에 고정 */
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}
.pick-your-favorite .inner {
  padding: 110px 0;
}

.pick-your-favorite .text-group {
  display: flex;
  justify-content: flex-end; /*오른쪽 정렬*/
  flex-wrap : wrap;
  /* border: 10px solid red; */

  /* 정렬 영역이 충분하여 줄바꿈 되지 않음 */
  /* 너비를 제한해서 강제로 줄바꿈 */
  width: 362px;
  margin-left: 100px;
}
.pick-your-favorite .text-group .title {
  margin-bottom: 40px;
}
.pick-your-favorite .text-group .description {
  margin-bottom: 40px;
}

/* RESERVE STORE */
.reserve-store {
  background-image: url(../images/reserve_store_bg.jpg);

  /* 시차(Parallax) 효과 */
  background-attachment: fixed; /* 배경 이미지가 뷰포트에 고정 */
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}
.reserve-store .inner {
  height: 600px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.reserve-store .medal {
  width: 334px;
  height: 334px;

  /* 원근법- 회전하는 요소의 부모 요소에 원근 거리를 추가 */
  perspective: 600px;
}
.reserve-store .medal .front {
  position: absolute; 
  transition: 1s;
}
.reserve-store .medal .back {
  position: absolute;
  transition: 1s;
  transform: rotateY(180deg);
  backface-visibility: hidden; /* 회전된 요소의 뒷면을 숨김 */
}
.reserve-store .medal:hover .front {
  transform: rotateY(-180deg);
  backface-visibility: hidden;
}
.reserve-store .medal:hover .back {
  transform: rotateY(0);
}
.reserve-store .medal .back .btn {
  position: absolute;
  top: 240px;
  left: 0;
  right: 0;
  margin: 0 auto;
}

/* 여기서부터 복붙 영역입니다. */
/* FIND STORE */
.find-store {
  background-image: url("../images/find_store_bg.jpg");
}
.find-store .inner {
  height: 400px;
}
.find-store .texture1 {
  position: absolute;
  top: 0;
  left: 400px;
}
.find-store .texture2 {
  position: absolute;
  bottom: 0;
  right: 0;
}
.find-store .picture1 {
  position: absolute;
  top: -60px;
  left: 0;
  border-radius: 50%;
  box-shadow: 2px 2px 8px 0 rgba(0, 0, 0, .5);
}
.find-store .picture2 {
  position: absolute;
  top: 150px;
  left: 250px;
  border-radius: 50%;
  box-shadow: 2px 2px 8px 0 rgba(0, 0, 0, .5);
}
.find-store .text-group {
  position: absolute;
  top: 120px;
  left: 550px;
}
.find-store .text-group .title {
  margin-bottom: 20px;
}
.find-store .text-group .description {
  margin-bottom: 20px;
}

/* AWARDS */
.awards {
  background-color: #272727;
}
.awards .inner {
  padding: 40px 0;
}
/* 쉼표로 구분해서 다중 선택으로 공통 스타일 지정 */
.awards .swiper-button-prev, 
.awards .swiper-button-next {
  width: 42px;
  height: 42px;
  border: 2px solid #fff;
  border-radius: 50%; /*원 만들기*/  
  z-index:1;
  color:#fff;  
  position: absolute;
  opacity: .3;
}
.awards .swiper-button-prev {
  /* 가운데로 몰아놓고 마진으로 위치 조정 */
  left: -100px;
}
.awards .swiper-button-next {
  right: -100px;
} 
.awards .swiper-button-prev:hover, 
.awards .swiper-button-next:hover {
  background-color: #fff;
  color: #333;
}
  .awards .swiper-button-prev::after,
  .awards .swiper-button-next::after {
  display: none;
} 

/* FOOTER */
footer {
  background-color: #272727;
  border-top: 1px solid #333;
}
footer .inner {
  padding: 40px 0 60px;
}
footer .menu {
  display: flex;  
  justify-content: center;
}
footer .menu li {
  position: relative;
}
footer .menu li::before {  
  content: "";
  width: 3px;
  height: 3px;
  border-radius: 50%;
  background-color: #555;

  /* 수직가운데정렬 */
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;  
}
footer .menu li:first-child::before {
  display: none;
}
/* 선생님 방법 숙제: 다음요소의 before에 다가만 넣기 -> before요소들중 첫번째 요소에 display none 안쓰게*/
footer .menu li a {
  display: block;
  color: #ccc;
  font-size: 12px;
  font-weight: 700;
  padding: 15px;
}
footer .menu li a.orange {
  color: #ea9926;
}
footer .btn-group {
  margin-top: 20px;
  display: flex;
  justify-content: center;
}
footer .btn-grou .btn {
  font-size: 12px;
}
/* 다음 형제 선택자 + 사용 */
footer .btn-group .btn + .btn {
  margin-left: 10px;  
}
footer .info {
  margin-top: 30px;
  text-align: center;
}
footer .info span {
  color: #999;
  font-size: 12px;
}
footer .info span + span {
  margin-left: 20px;
}
footer .copyright {
  color: #999;
  font-size: 12px;
  text-align: center;
  margin-top: 12px;
}
footer .logo {
  margin: 30px auto 0 ;
}

/* SCROLL TO TOP */
#to-top {
  position: fixed;
  bottom: 30px;
  right: 30px;
  z-index: 9;
  width: 42px;
  height: 42px;
  background-color: #333;
  color: #fff;
  border: 2px solid #fff;
  border-radius: 10px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  /* text-align: center;
  line-height: 52px; */
}

/* 간단하게 패이지 상단 스크롤 방법 html에 scroll-behavior */
/* #to-top2 a {
  position: fixed;
  bottom: 70px;
  right: 70px;
  z-index: 9;
  width: 42px;
  height: 42px;
  background-color: #333;
  color: #fff;
  border: 2px solid #fff;
  border-radius: 10px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;  
} */

